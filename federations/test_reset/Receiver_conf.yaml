fed_name: Receiver
fed_conf:
  model_script : test_case1_1/Receiver.py
  class_name: Receiver
  n_instances: 1
  RL_training: true
  mem_attrs : none
  real_period: 3600
fed_info:
  broker: null
  broker_init: null
  broker_key: null
  broker_port: null
  core_init: null #for debugging only
  core_name: receiver_core
  core_type: zmq
  local_port: null
  separator: null
fed_flags:
  UNINTERRUPTIBLE: False
  WAIT_FOR_CURRENT_TIME_UPDATE: False
  TERMINATE_ON_ERROR: True


fed_properties:
  TIME_DELTA: 1e-09
  TIME_PERIOD: 3600
  TIME_OFFSET: 0.0
  TIME_STOPTIME: 172800


fed_connections:
  sub: {}
  pub: {}
  end:
    0:
      controllable_var: [ ]
#    0:
#      "destinations": []
#      "sources": [ ] #this works if i want to subscribe to a value (e.g. pubblication) is useful to read data from sims that do not have endpoints and do not receive messages
#      "var_in": [ test_message ]
#      "var_out": [  ]
#    1:
#      "destinations": [ ]
#      "sources": [] #this works if i want to subscribe to a value (e.g. pubblication) is useful to read data from sims that do not have endpoints and do not receive messages
#      "var_in": [test_message]
#      "var_out": []
  inp:
    0: [ {
      "key": "energy_out",
      "type": "double",
      "units": "Wh",
      "targets": [Battery/0/energy_out]
    },
      {
        "key": "power",
        "type": "double",
        "units": "W",
        "targets": [ PV/0/pv]
      } ]

model_conf:
  params: {}
  init_state: {}